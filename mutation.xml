<tool id="mutation" name="Mutation Pipeline" version="0.0.1">
    <description>Mutation Pipeline for calling SNPs and variants</description>
    <command>
<![CDATA[
rnaseq_mutation_pipeline.py 
--index \${MUTATION_RESOURCES}/Hg19.fa_star_index 
--reference \${MUTATION_RESOURCES}/Hg19.fa 
--plot 
--out_dir output
--threads \${GALAXY_SLOTS:-8}
--log $log
--vcf \${MUTATION_RESOURCES}/dbsnp_138.b37_Hg19.vcf 
--update AddOrReplaceReadGroups.jar:\${MUTATION_RESOURCES},MarkDuplicates.jar:\${MUTATION_RESOURCES},SortSam.jar:\${MUTATION_RESOURCES},GenomeAnalysisTK.jar:\${MUTATION_RESOURCES}/GenomeAnalysisTK-3.1-1-g07a4bf8,samtools:/N/soft/rhel6/samtools/1.2/bin,bcftools:/N/soft/rhel6/samtools/1.2/bin,snpEff.jar:\${MUTATION_RESOURCES},STAR:/N/dc2/projects/galaxyshared/trinity/third_party_applications/STAR-2.5.2a/bin/Linux_x86_64
--cravat_annotation_header \${MUTATION_RESOURCES}/cravat_annotation.txt 
--cosmic_vcf \${MUTATION_RESOURCES}/CosmicCodingMuts_v72_grch37_updated_chr.vcf.gz
--left $left_input
--right $right_input
--alignment_mode STAR
--variant_call_mode GATK
--variant_filtering_mode GATK
--bed \${MUTATION_RESOURCES}/hg19.refGene.sort.bed
--darned \${MUTATION_RESOURCES}/darned_hg19.txt
--radar \${MUTATION_RESOURCES}/radar_hg19_v2.txt
--tissue_type $tissue_type
--email ttickle@broadinstitute.org
--is_hg19
 >> $log
]]>
    </command>
    <macros>
    </macros>
    <stdio>
      <exit_code range="1:"  level="fatal"   description="Error returned from pipeline" />
    </stdio>
    <regex match="Pipeline run failed"
           source="stderr"
           level="fatal"
           description="Unknown error encountered" />
    <inputs>
      <param format="fasta,fastq" name="left_input" type="data" label="Left/Forward strand reads" help=""/>
      <param format="fasta,fastq" name="right_input" type="data" label="Right/Reverse strand reads" help=""/>
      <param name="tissue_type" type="select" label="Select a pathology" help="If you don't know, just choose 'General Purpose'">
        <options from_data_table="cravat_tissues">
	  <filter type="sort_by" column="1"/>
	  <validator type="no_options" message="No indexes are available for the selected input dataset"/>
        </options>
      </param>
    </inputs>
    <outputs>
      <data format="txt" name="log" label="${tool.name} on ${on_string}: log" />
      <data format="bam" name="alignbam" label="Sorted bam from alignment" from_work_dir="output/misc/Aligned.sorted.bam"/>
      <data format="bam" name="recalibrated_bam" label="Bam used in haplotype calling" from_work_dir="output/misc/recalibrated.bam"/>
      <data format="vcf" name="rawvar" label="Raw variants file" from_work_dir="output/variants.vcf"/> 
      <data format="vcf" name="filtvar" label="Variants file with minimal suggested filtering" from_work_dir="output/variants_initial_filtering.vcf"/> 
      <data name="filtannotvar" label="Variant file filtered and annotated" from_work_dir="output/annotated_min_filtered.vcf.gz"/> 
      <data format="vcf" name="cancerVariants" label="Variant file filtered for Cancer Studies" from_work_dir="output/cancer.vcf"/> 
      <data format="tabular" name="cancertab" label="Text file of variants filtered for Cancer Studies" from_work_dir="output/cancer.tab"/> 
      <data format="bed" name="bed_path" label="Bed file for reference genome" from_work_dir="output/hg19.refGene.sort.bed"/>
      <data format="json" name="vizjson" label="JSON pointing to data for the Inspector Visualization" from_work_dir="output/mutation_inspector.json"/>  
    </outputs>
    <tests>
    </tests>
    <help>
.. class:: warningmark

This service uses the GATK_. The GATK_ is licensed by the Broad Institute and is made available to academic users of this service for non-commercial use only. The full text of the license is available here_. For more information about GATK and full documentation, please visit the GATK_ website.

.. class:: infomark

Mutation detection in RNA-Seq highlights the GATK_ Best Practices in RNA-Seq variant calling, several sources of variant annotation, filtering based on CRAVAT_, and interactive data exploration using IGV_ web. Initially a 2-pass STAR_ alignment is performed followed by a series of GATK_ tools for variant calling. To aid in interpretation, variants are further annotated using several RNA editing databases, cancer specific features, and general variant information. CRAVAT_ is then used to score variants as cancer drivers (CHASM scores) or pathogenic (VEST scores). The mutation detection system adds value to GATK_ variant calling with tiered filtering. Initially, a comprehensive VCF file with conservative filtering is created. A VCF file additionally filtered based on annotation sources is then provided (for example filtering known RNA editing events and common variants). Final filtering is focused on reducing variants to a short list of predicted cancer-focused variants (which is made available as a VCF file). To aid users in data exploration, an interactive IGV_ web browser has been integrated directly into Galaxy giving an immediate customized view of the final cancer-focused variants.

**To Visualize Output**

After completion, results can be visualized in galaxy. Click on the output json file name in the history (on the right). A more detailed view of that file will be shown. Click on the button in the middle that looks like a bar chart. The visualization should now open for you to explore results.

**There are several output files for the CTAT Mutation Pipeline. Files of interest include:**

1) **Bam used in haplotype calling** - The processed bam from which the variants were called.

2) **Text file of variants filtered for Cancer Studies** - A tabular table version of the cancer.vcf .

3) **Variant file filtered for Cancer Studies** - A final short list of SNPs associated with cancer. This is a good first place to start but the other VCF files can be used depending on if you would like to perform your own variant filtering and prioritization.

4) **Variants file with minimal suggested filtering** - Variants after simple hard filtering.

5) **Variant file filtered and annotated** - Variants with more filtering and annotation.

6) **Raw variants file** - All variants called (this will have many false positives).

7) **JSON pointing to data for the Inspector Visualization** - A logistical file that enables the visualization.

8) **Sorted bam from alignment** - The original aligned bam before processing.

9) **Bed file for reference genome** - The associated bed file for the reference.

10) **Mutation on dataset log** - The log file.

.. _CRAVAT: http://www.cravat.us/help.jsp
.. _GATK: https://www.broadinstitute.org/gatk/
.. _website: https://github.com/NCIP/Trinity_CTAT/wiki
.. _here: https://www.broadinstitute.org/gatk/about/license.html
.. _IGV: https://www.broadinstitute.org/igv/
.. _STAR: https://github.com/alexdobin/STAR
    </help>
</tool>
