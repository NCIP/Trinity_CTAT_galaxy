owner: "trinity_ctat"
# Put in the CTAT repository where this is defined. 
# remote_repository_url: "https://github.com/galaxyproject/planemo/tree/master/tests/data/repos/
# remote_repository_url: https://github.com/NCIP/Trinity_CTAT_galaxy ? Is that what it wants?
# homepage_url: "https://github.com/NCIP/Trinity_CTAT_galaxy/blob/master/README.md" ? Is that what it wants?

categories:
    - "Assembly"
    - "RNA"
    - "Sequence Analysis"

repositories:
  clean_headers:
    description: "Removes whitespace from the header of each read in a fastq file."
    long_description: "Removes whitespace from the header of each read in a fastq file. If your Trinity run gives you errors with dying threads during the normalization step, try this tool on each input first."
    include:
      - clean_headers.xml
  concatenate:
    description: "A concatenate tool is included in this suite for completeness purposes. Concatenates multiple files to one file."
    include:
      - concatenate.xml
      - bash_command_executer.py
      - test-data/Sp_ds.left.fq
      - test-data/Sp_ds.right.fq
      - test-data/Sp_hs.left.fq
      - test-data/Sp_hs.right.fq
  trinity:
    description: "Trinity assembles transcript sequences from Illumina RNA-Seq data."
    long_description: "Trinity, developed at the Broad Institute and the [Hebrew University of Jerusalem] (http://www.cs.huji.ac.il), represents a novel method for the efficient and robust de novo reconstruction of transcriptomes from RNA-seq data. Trinity combines three independent software modules: Inchworm, Chrysalis, and Butterfly, applied sequentially to process large volumes of RNA-seq reads. Trinity partitions the sequence data into many individual de Bruijn graphs, each representing the transcriptional complexity at a given gene or locus, and then processes each graph independently to extract full-length splicing isoforms and to tease apart transcripts derived from paralogous genes."
    include:
      - trinity.xml
      - trinity_wrapper.py
      - test-data/reads.left.simPE.fq
      - test-data/reads.right.simPE.fq
      - test-data/Sp.cat_ds_hs.left.fq
      - test-data/Sp.cat_ds_hs.right.fq
  align_and_estimate_abundance:
    description: "Align and Estimate Abundance generates transcript quantification for genes and isoforms using RSEM."
    long_description: "Align and Estimate Abundance generates transcript quantification for genes and isoforms using RSEM. RSEM enables accurate transcript quantification for species without sequenced genomes."
    include:
      - align_and_estimate_abundance.xml
      - trinityToolWrapper.py
      - __add_to_PATH_setting.txt
      - test-data/reads.simPE.Trinity.fasta
      - test-data/reads.left.simPE.fq
      - test-data/reads.right.simPE.fq
      - test-data/Sp.Trinity.fasta
      - test-data/Sp_hs.left.fq
      - test-data/Sp_hs.right.fq
  abundance_estimation_to_matrix:
    description: "Abundance estimation to matrix joins RSEM-computed gene or isoform fragment counts into a matrix file."
    include:
      - abundance_estimation_to_matrix.xml
      - abundance_estimation_to_matrix_wrapper.py
      - trinityToolWrapper.py
      - __add_to_PATH_setting.txt
      - test-data/Sp_ds.RSEM.genes.results
      - test-data/Sp_hs.RSEM.genes.results
  edger_differential_expression:
    description: "EdgeR differential expression identifies differentially expressed transcripts."
    long_description: "EdgeR differential expression uses the counts_matrix from abundance_estimation_to_matrix to identify differentially expressed transcripts."
    include:
      - EdgeR_differentialExpression.xml
      - EdgeR_differentialExpression_wrapper.py
      - test-data/Sp.counts.matrix
      - test-data/Sp.Trinity.fasta
  analyze_differential_expression:
    description: "Analyze differential expression creates anaylses files from the output from EdgeR differential expression."
    include:
      - analyze_diff_exp.xml
      - analyze_diff_exp_wrapper.py
      - test-data/Sp.edgeR.tar.gz
      - test-data/Sp.TMM.EXPR.matrix
  discasm:
    description: "DISCASM extracts reads that map to reference genomes in a discordant fashion and performs a de novo transcriptome assembly of these reads"
    long_description: "DISCASM aims to extract reads that map to reference genomes in a discordant fashion and optionally include reads that do not map to the genome at all, and perform a de novo transcriptome assembly of these reads. DISCASM relies on the output from STAR (as run via STAR-Fusion), and supports de novo transcriptome assembly using Trinity or Oases. - https://github.com/DISCASM/DISCASM/wiki"
    include:
      - discasm.xml
      - test-data/DISCASM/SF2/reads_1.fq.gz
      - test-data/DISCASM/SF2/reads_2.fq.gz
      - test-data/DISCASM/SF2/Aligned.sortedByCoord.out.bam
      - test-data/DISCASM/SF2/Chimeric.out.junction
      - test-data/DISCASM/reads_1_2.oases.transcripts.fa
      - test-data/DISCASM/SF1/reads.left.simPE.fq
      - test-data/DISCASM/SF1/reads.right.simPE.fq
      - test-data/DISCASM/SF1/SF_out_aligned.bam
      - test-data/DISCASM/SF1/SF_out_chimeric.junction
      - test-data/DISCASM/reads.simPE.oases.transcripts.fa

suite:
    name: trinity_ctat_galaxy_tools_test4_repo
    version: 1.0.0
    description: "These tools were developed by ..... for the purpose of ..."
    long_description: "Expand on this definition. We need something really good here. We also need to make sure we have the proper categories chosen in the above field. "

